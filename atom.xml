<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>艾泽拉斯</title>
  <subtitle>一个劣人的日常</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://cnhao.com/"/>
  <updated>2017-12-28T18:53:11.928Z</updated>
  <id>http://cnhao.com/</id>
  
  <author>
    <name>Cnhao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>是啊,so why game?</title>
    <link href="http://cnhao.com/2017/12/27/whygame/"/>
    <id>http://cnhao.com/2017/12/27/whygame/</id>
    <published>2017-12-27T13:31:09.000Z</published>
    <updated>2017-12-28T18:53:11.928Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://o6ymgz5vj.bkt.clouddn.com/zhizi.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;作为一个随心所欲的码农摄影师,我决定从这篇以后,包括以前能加上我拍的照片的都给加上,别太违和就行.&lt;/p&gt;
&lt;p&gt;这是我老家,这是我小侄子.长的跟我很像.&lt;/p&gt;
&lt;p&gt;我看着这张今年夏天我给他拍的照片,想到了很多.&lt;/p&gt;
&lt;p&gt;现在是2017年12月27号,夜.&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;这个&lt;code&gt;夜&lt;/code&gt;字屌不屌,瞬间就出来散文的感觉了.&lt;br&gt;如果你觉得看到这个夜字就想到某些技术书籍上的编者按,或者译者序..那我无话可说.&lt;/p&gt;
&lt;p&gt;前几天已经决定离职,隔壁组leader一直都跟我很聊得来,知道消息后拉着我在公司后面聊了几个小时.期间他问了我这个问题,为什么非得是游戏呢?&lt;/p&gt;
&lt;p&gt;我知道,但是我不知道怎么说.&lt;/p&gt;
&lt;p&gt;在我长期以来的记忆里,我是个骄傲的人,虽然生在河南省这个高考重灾区,但我不屑于学习,我不屑于努力去得到我想要的,我觉得如果他们努力,我也努力,我就输了.&lt;/p&gt;
&lt;p&gt;作为一个非智障,我不是一生下来就这样的,从小到大,我太少吃苦了.我不懂为什么身边的人都那么笨,我想做什么都能做成,我想考第一,天天睡觉也是第一,参加个作文比赛都tm能得奖回来全校念,我喜欢个女孩儿,才刚问问她就同意了,连打个游戏,我也要压他们一头.&lt;/p&gt;
&lt;p&gt;我从高一玩到高三,顺利考了个985高校转身走人,还记得我高考前几天还在网吧通宵玩游戏,结束以后写了一句话,下一站,西安.&lt;/p&gt;
&lt;p&gt;我的父母很开明,家教很严,高中以前我都被强约束,住校后开始了必然的叛逆,我对父母永远都是那个套路,只要成绩没落下,可不可以不管我.&lt;/p&gt;
&lt;p&gt;这种无脑的快乐生活,一晃十年.像个巨婴.一夜间,傲气尽丧.&lt;/p&gt;
&lt;p&gt;今年秋冬,几个月的时间,我慢慢空虚,思想剧烈变化,我感觉到我在成长,比我曾轻松超越的人晚了很多年.&lt;/p&gt;
&lt;p&gt;我不信命,但信因果,人生就像函数,什么样的输入得到什么样的输出,不留心会有bug,作死还会意外结束进程.&lt;/p&gt;
&lt;p&gt;我现在非常想踏踏实实,认认真真,身心投入的做事情.感觉强烈,迫切,持续了几个月.刚开始的时候我以为我心血来潮,但显然不是了,渐渐地,摩托车我不想玩了,钓鱼我也不去了,聚餐我也没兴趣了,衣服也不买了,旅游都觉得索然无味.&lt;/p&gt;
&lt;p&gt;我只想做对自己有提高,有积累,有规划,有目标的事情.譬如一份我契合上面这些点的,我又有强烈认同感的工作.&lt;/p&gt;
&lt;p&gt;我对钱没有那么敏感,可能这也是巨婴的表现,所以那些什么王者荣耀100个月年终奖的消息对我没有任何触动.我第一个想到的不是游戏,是微信,互联网里我最认同的应用,广州,我读研的地方很喜欢,有同学,有朋友,有蓝天白云.很棒,有点小期待小兴奋.于是联系微信里的同学,看看内推岗位.慢慢的开始准备.然而进度慢的可以用0来形容,不知道为什么.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;这十年来要说还是什么是坚持的,那就是游戏了.上班后玩的少了,一是因为可以玩的事情变得多了,二是工作后时间变少了,我玩游戏太容易认真,那样会很累,但是游戏直播还是要看的.我对游戏的圈子认识停留在dota2,研究生毕业前一直在玩的两款游戏之一.有一天看着直播抽着烟,突然一个念头,要不去做游戏开发吧.先搜搜看都要干什么.&lt;/p&gt;
&lt;p&gt;那一晚上,我失眠了,接下来的时间里我完全无法控制我自己的在百度,google,知乎,从计算机图形学,到cpu模拟渲染,光线追踪,花式shader,看到后台的各种的帧同步,状态同步,前端的延迟优化,动作重放,看暴雪工程师讲解守望先锋里如何让玩家体验更好,普通设计,狙击设计,轨迹性攻击分别怎么实现,再后来大火的绝地求生在dota2直播区也开始风靡,看着大家顶着延迟玩,我看到对个人移动服务器判定后的瞬间回退,看到了队友延迟后插值的漂移,看到了外挂满天飞,为什么瞬移不判定违规,外挂在哪里抓到了摄像机的位置可以拉长胳膊各种瞄准,好奇为啥掉线后人会一直往前跑,想到steam,绿光,开发者的自豪,看到55开被封号,看到一百多万玩家看直播刷弹幕的乐趣.我想到了各种我认真玩过的游戏带给我的快乐,回忆,温暖.&lt;/p&gt;
&lt;p&gt;我产生了无比强烈的认同感和深深的不安.这种认同感让我明白,除了游戏以外,没有别的工作能给我这种感觉,不安是因为我&lt;del&gt;终于&lt;/del&gt;觉得充满挑战,怕自己太菜.但这还是让我兴奋.&lt;/p&gt;
&lt;p&gt;于是我开始学习,到今晚为止,状态未变.好了,写的时间有点久,先去做点正事.也许未完待续.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://o6ymgz5vj.bkt.clouddn.com/zhizi.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;作为一个随心所欲的码农摄影师,我决定从这篇以后,包括以前能加上我拍的照片的都给加上,别太违和就行.&lt;/p&gt;
&lt;p&gt;这是我老家,这是我小侄子.长的跟我很像.&lt;/p&gt;
&lt;p&gt;我看着这张今年夏天我给他拍的照片,想到了很多.&lt;/p&gt;
&lt;p&gt;现在是2017年12月27号,夜.&lt;/p&gt;
    
    </summary>
    
    
      <category term="游戏开发" scheme="http://cnhao.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
      <category term="随笔" scheme="http://cnhao.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>vector动态扩容</title>
    <link href="http://cnhao.com/2017/11/27/vector/"/>
    <id>http://cnhao.com/2017/11/27/vector/</id>
    <published>2017-11-27T11:28:59.000Z</published>
    <updated>2017-12-28T19:09:05.785Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://o6ymgz5vj.bkt.clouddn.com/shou.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;比特流数据传输那篇文章,我们在buffer不够用的时候重新realloc了内存.&lt;br&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ReallocBuffer(&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::max(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*mBitCapacity,nextBitHead);)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;所以为什么系数是2呢.&lt;br&gt;很简单,跟着&lt;code&gt;std::vector&lt;/code&gt;学的.&lt;/p&gt;
&lt;p&gt;我们看一下&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; v;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt;::size_type tmp = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, j = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;10000000&lt;/span&gt;; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        v.push_back(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (v.capacity() != tmp)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; j &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot; &quot;&lt;/span&gt; &amp;lt;&amp;lt; v.capacity() &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            tmp = v.capacity();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            j++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;output:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2 2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4 8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5 16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6 32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7 64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8 128&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9 256&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10 512&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11 1024&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12 2048&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13 4096&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14 8192&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15 16384&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16 32768&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17 65536&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18 131072&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19 262144&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20 524288&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21 1048576&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22 2097152&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23 4194304&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24 8388608&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25 16777216&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;所以为什么是2,2好不好.😆&lt;br&gt;其实并不好.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/facebook/folly/blob/master/folly/docs/FBVector.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;facebook/folly&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Despite other compilers reducing the growth factor to 1.5, gcc has staunchly maintained its factor of 2. This makes std::vector cache- unfriendly and memory manager unfriendly.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;是时候又祭出了鹅厂总监Milo Yip…这大哥真是神一样的存在.经常在我困惑的时候搜到他的解释,这不能怪我抄袭,这本身也就是学习的一种方式嘛,向强者学习,就像看各种大师的书,信手拈来各种看起来很正常的做法,但其实如果面对空白让我来选择,可能抓破头也想不到那样做.经常会感觉,我擦,这好巧妙啊,这拿出来都不敢说..可是.这不就是学习么.又跑题了&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2017/12/27/5a438682e30ab.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2017/12/27/5a4386d71de3c.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;这里面也有几个问题就是所谓的&lt;code&gt;cache-unfriendly&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;连续不断的申请新的内存,cache难以命中这没问题.&lt;br&gt;但是为什么我按1.5倍申请就缓存友好了呢.&lt;br&gt;如果有合适的机会重新回收内存再分配,内存地址有变化,但是地址范围并没有超过缓存的覆盖.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;改变数据是不会令缓存失效的，缓存失效是因为要访问一些不在缓存里的内存地址。&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://o6ymgz5vj.bkt.clouddn.com/shou.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;比特流数据传输那篇文章,我们在buffer不够用的时候重新realloc了内存.&lt;br&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ReallocBuffer(&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::max(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*mBitCapacity,nextBitHead);)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;所以为什么系数是2呢.&lt;br&gt;很简单,跟着&lt;code&gt;std::vector&lt;/code&gt;学的.&lt;/p&gt;
&lt;p&gt;我们看一下&lt;/p&gt;
    
    </summary>
    
    
      <category term="C++" scheme="http://cnhao.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>客户端重放与航位预测</title>
    <link href="http://cnhao.com/2017/11/13/delay/"/>
    <id>http://cnhao.com/2017/11/13/delay/</id>
    <published>2017-11-13T14:30:04.000Z</published>
    <updated>2017-12-28T20:03:28.800Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://o6ymgz5vj.bkt.clouddn.com/chezhan.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;为了年前能找个游戏后台的工作,最近一直在学习相关知识.&lt;br&gt;因为没有需求只能自己给自己提需求.&lt;/p&gt;
&lt;p&gt;首先假设我们在做的是一款移动射击游戏,后台开发这点比较好,比较友好的屏蔽了2D或者3D,arpg还是mmo,虽然我也想做那些,但是和我工作跨度太大,那些只能先进门后再修行了.心中对那个光影的世界还是有梦的好吧.&lt;/p&gt;
&lt;p&gt;之前有关注了一段时间王者荣耀,发现其实MOBA游戏后台实现方式还是比较五花八门的,每个公司各显神通.&lt;/p&gt;
&lt;p&gt;天美的做法是帧同步,不同于以前war3的那种典型的lockstep,走的应该还是CS架构,所有的客户端上传命令,服务器负责转发,他们给五个客户端分配不同的随机算子,屏蔽浮点数的不确定性&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;,这样五个客户端就像五个播放器,逐帧的去播放指令就好,但是指令肯定不是逐帧到达的,所以是插值播放动画,服务器会检查一致性,排查异常原因.&lt;/p&gt;
&lt;p&gt;这样的话游戏大体分为三个层,渲染层,逻辑层和网络层的分离,帧数也独立,这样子加上插值就能得到一个比较好的表现.&lt;/p&gt;
&lt;p&gt;最上层,就是你手指头按的到的真实的游戏渲染插值动画,下面一层是游戏数据运算,普攻,甩技能的计算判定等等,然后第三层就算是服务器.可以想到这样子的话制作回放和保存录像肯定是非常方便的,如果你卡了,你的包传不到服务器,服务器也不会转发你的包,在别人看来你就是不动,等你卡完了发现自己秒死,丢包的话他们的做法好像是增加冗余之类的方法,每次给这个客户端发包都带一些老包,也能指定重发一些确认丢失的关键帧,从缓存里直接按帧ID取出来发就行,很方便.但是如果掉线的话…应该就只能从头快进了.为什么研究研究着换方向了呢….这个话题就很悲伤了,我带applecare的亮黑7plus被偷了.然后从那晚起,我再也没玩过这个游戏.&lt;/p&gt;
&lt;p&gt;转战射击游戏,CS,COD,守望先锋,H1Z1,当然还有现象级的PUBG..手游射击暂时不提,个人觉得fps游戏,怎么也得pc,没键盘鼠标蓝瘦啊,手游就玩玩适合手游的,moba有声有色,各种独立游戏,休闲小游戏,回合制肝游戏都很出彩,多多利用碎片化时间,吸钱网游就别装,可着劲儿努力好好吸一波,xbox的暗黑3就是比pc舒服很多,塞尔达+NS也是绝配不是么.各有各的好处,这里有点看不太懂网易游戏,也忒极端了,以前端游+代理也是有声有色的,错过了一波页游,当然可能是不屑,然后赶上一波手游,完全气质变了啊,我玩wow时候那个网易去哪儿了,现在感觉完全…不好描述&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;受不鸟了受不鸟了,我从未来穿越回来插播一条新闻,哈哈哈哈哈哈,网易来了个骚操作,荒野求生PC版全国首款端游吃鸡之手游模拟器,真鸡儿666,真的是想唱一首凉凉送给你….&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;与帧同步不同,考虑作弊情况还有特性,对每个客户端所见之间的同步没有对延迟以及手感的要求高,另外还有数据和带宽的问题,fps游戏一般多采用状态同步.也就是有一个权威服务器来做游戏模拟来最终唯一判定各个客户端的状态.&lt;/p&gt;
&lt;p&gt;先不考虑ack和冗余,最简单的实现,你按w键想往前走,你的游戏每帧会处理游戏输入,于是你的w按键状态被记录,假设每秒以一定的频率采集一次input,然后(dirty状态+当前帧时间+两次采集的真实时间间隔),作为一个move包上传服务器,插一句,因为服务器和客户端的时钟可能不同,所以要上传自己的时间戳,这样来计算rtt才是相对准确的,客户端重放也要用到这个时间戳.服务器收到后异步的先把move取出来放unProcessedPackets队列,逐帧模拟的时候消化队列,根据ip去找到正确的对象代理来模拟deltaTime的move,然后新的位置,速度,旋转等等具体游戏需要的细节回传.&lt;/p&gt;
&lt;p&gt;这样有一个问题,当一个命令从客户端到服务器,再从服务器传回客户端执行,这经历了一个严重影响手感的rtt.&lt;/p&gt;
&lt;p&gt;游戏里一切以服务器为准,那么显而易见你在游戏里看到的玩家的状态,比他们的服务器状态滞后了1/2个rtt,另外正常的游戏不可能花费好几帧不动来等服务器的包,都是插值模拟,假设从收到一个包,到顺滑的展现出这个包的动作需要的时间为ip,那么情况只会更糟,延迟为1/2*rtt+ip.但插值这个ip时间换来的是更加顺滑的操作体验,再加上摄像机可以由玩家自己移动,相比不插值还是要好很多.至少你不会大叫&lt;code&gt;卡卡卡&lt;/code&gt;,你可能会说&lt;code&gt;这游戏延迟有点高啊熊dei&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;解决方案就是预测游戏对象的位置,在渲染,假定这些精灵保持(最新的包里的)动作(方向,速度,旋转)不变,再模拟1/2个rtt时间渲染出来,如果他们确实在下一个状态包到来的时候,之间状态确实没有变过,那么新的预测肯定与现在表现的位置一致,无需调整.&lt;/p&gt;
&lt;p&gt;如果不一致,譬如你看到的玩家停止奔跑开始射击,你拿到新的状态后开始模拟,然后发现你的客户端展现的位置有偏差,就以服务器为准进行调整把他拉回来,绝地求生延迟这么大,各种飘逸,回退,走不动路捡不起抢太常见了,但是注意,调整的位置依然模拟后的.&lt;/p&gt;
&lt;p&gt;这基本解决我们作为玩家的所见即所得(看见的就是服务器位置,可以对着他愉快的射击了),这对于非本地玩家很有效,但自己的游戏体验会很差.因为无论你怎么做,怎么预测,你按下一个按钮,到收到反馈,至少都会经历一个rtt.&lt;/p&gt;
&lt;p&gt;解决方案就是客户端重放.&lt;br&gt;当你按下按钮的时候,你本地就渲染这个动作,跟网络比起来,机器的延迟简直可以忽略了.核心就是保存客户端发出的move队列,当你收到了来自服务器的一个处理过的MoveList的时候,从list里取出mLastMoveTimestamp,和当前时钟时间比较算出rtt,然后去保存的move列表中删除在这个时间点以前的所有move.&lt;del&gt;关于ack和冗余来弥补UDP的缺点改天再换个地方说吧&lt;/del&gt;.&lt;/p&gt;
&lt;p&gt;最后本地客户端,把收到的服务器的move都处理完,在这个基础上把本地movelist剩余的所有服务器未见的move,再模拟一遍.&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ReadAndDo();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Simulate();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果服务器没有发生什么意外,那么执行后的结果应该与read之前完全一致,游戏体验也与单机无疑.&lt;/p&gt;
&lt;p&gt;所以什么是意外呢.&lt;/p&gt;
&lt;p&gt;譬如你正跑的欢,被98K一枪爆头.就像人生.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://o6ymgz5vj.bkt.clouddn.com/chezhan.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;为了年前能找个游戏后台的工作,最近一直在学习相关知识.&lt;br&gt;因为没有需求只能自己给自己提需求.&lt;/p&gt;
&lt;p&gt;首先假设我们在做的是一款移动射击游戏,后台开发这点比较好,比较友好的屏蔽了2D或者3D,arpg还是mmo,虽然我也想做那些,但是和我工作跨度太大,那些只能先进门后再修行了.心中对那个光影的世界还是有梦的好吧.&lt;/p&gt;
&lt;p&gt;之前有关注了一段时间王者荣耀,发现其实MOBA游戏后台实现方式还是比较五花八门的,每个公司各显神通.&lt;/p&gt;
&lt;p&gt;天美的做法是帧同步,不同于以前war3的那种典型的lockstep,走的应该还是CS架构,所有的客户端上传命令,服务器负责转发,他们给五个客户端分配不同的随机算子,屏蔽浮点数的不确定性
    
    </summary>
    
    
      <category term="游戏开发" scheme="http://cnhao.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>内存对齐与游戏开发之比特流数据传输</title>
    <link href="http://cnhao.com/2017/10/28/bitstream/"/>
    <id>http://cnhao.com/2017/10/28/bitstream/</id>
    <published>2017-10-28T13:12:29.000Z</published>
    <updated>2017-12-28T19:08:53.676Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://o6ymgz5vj.bkt.clouddn.com/chuizi.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;网上写的五花八门的快餐式教程和规则嵌套毫无灵魂.&lt;/p&gt;
&lt;p&gt; 为什么要对齐?什么时候使用&lt;code&gt;#pragma pack&lt;/code&gt;?有什么工具可以检查?有什么例外?等等..&lt;/p&gt;
&lt;p&gt;听听大师怎么说? &lt;del&gt;我就不复制粘贴了.&lt;/del&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/埃里克·雷蒙&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Eric S. Raymond&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.catb.org/esr/structure-packing/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;The Lost Art of C Structure Packing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ludx/The-Lost-Art-of-C-Structure-Packing&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;翻译:失传的C结构体打包技艺&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;差不多已经讲解了这方面的我需要知道的知识的超集.&lt;/p&gt;
&lt;p&gt;那么问题来了.我为什么要知道这些呢?因为最近在做的一件事情让我想起了这些.&lt;/p&gt;
&lt;h1 id=&quot;比特流数据传输&quot;&gt;&lt;a href=&quot;#比特流数据传输&quot; class=&quot;headerlink&quot; title=&quot;比特流数据传输&quot;&gt;&lt;/a&gt;比特流数据传输&lt;/h1&gt;&lt;p&gt;在网络游戏中,数据传输是绕不开的话题.&lt;br&gt;这里说的不是进程通信IPC,也不是链路层,不是MTU,不是TCP,UDP,IP,不是分包路由,不是……=_=&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;我想说的是包在UDP/TCP头后面的真正的data.&lt;br&gt;目的当然很清晰,让他尽可能的小,降低带宽要求啊,降低延迟啊,blablabla,方法也很清晰,比特位操作.核心的操作就是打破对齐.&lt;br&gt;实现一套自己的读写规则.&lt;/p&gt;
&lt;p&gt;假设我们有这样一个操作:&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//假设我们已经实现了这样一个类,他的对象会初始化一块内存出来,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//并有成员变量指向初始head以及内存容量capacity&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;OutputMemoryBitStream ot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//往ot中写入13,用5个bit,写入52用6个bit,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ot.write(&lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ot.write(&lt;span class=&quot;number&quot;&gt;52&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;还有一个重要假设,小端模式,intel架构的基本都是小端,主机平台将xbox之类的是大端&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;关于大小端再多说一句&quot;&gt;&lt;a href=&quot;#关于大小端再多说一句&quot; class=&quot;headerlink&quot; title=&quot;关于大小端再多说一句:&quot;&gt;&lt;/a&gt;关于大小端再多说一句:&lt;/h2&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;union&lt;/span&gt; &amp;#123; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; c[&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;]; &lt;span class=&quot;keyword&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; l; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    endian_test = &amp;#123; &amp;#123; &lt;span class=&quot;string&quot;&gt;&#39;l&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;?&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;?&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;b&#39;&lt;/span&gt; &amp;#125; &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; ENDIANNESS ((char)endian_test.l)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;ENDIANNESS&amp;lt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;13内存:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;值&lt;/th&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;位&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;52内存:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;值&lt;/th&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;位&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;上面的两个write,我们期望这样的结果:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;值&lt;/th&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;th&gt;1&lt;/th&gt;
&lt;th&gt;0&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;比特位&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;字节位&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;可能看起来不太清晰,简单来说就是,13没用完第一个字节,剩下的空间用52填补,52多出来的高位存入下一个字节的地位.&lt;/p&gt;
&lt;p&gt;不多bb,先上代码&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;size-t&quot;&gt;&lt;a href=&quot;#size-t&quot; class=&quot;headerlink&quot; title=&quot;size_t&quot;&gt;&lt;/a&gt;size_t&lt;/h2&gt;&lt;p&gt;不行了又想bb两句了,&lt;code&gt;size_t&lt;/code&gt;,&lt;code&gt;uint32_t&lt;/code&gt;这些东西,众所周知他可以跨平台的使用,让代码移植性好,更不容易出错.但是我这人对这种点到为止的解释总是很难受,我加两句.&lt;/p&gt;
&lt;p&gt;size_t就是size type的意思,本意上他应该是作为&lt;code&gt;sizeof&lt;/code&gt;的返回值类型的,不应该把他当做一个&lt;code&gt;unsigned int&lt;/code&gt;去使用,他的使用场景应该是类似于&lt;code&gt;void* malloc(size_t)&lt;/code&gt;或者如下图的第二个参数,就是一个用来表示大小的东西,就像一个接口,让人忽略他下面是啥,有没有符号那些乱七八糟的,另外一个&lt;code&gt;int&lt;/code&gt;变量一定是小于等于机器字长,&lt;code&gt;size_t&lt;/code&gt;一定不小于.好了好了.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;code&quot;&gt;&lt;a href=&quot;#code&quot; class=&quot;headerlink&quot; title=&quot;code&quot;&gt;&lt;/a&gt;code&lt;/h2&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; OutputMemoryBitStream::WriteBits(&lt;span class=&quot;keyword&quot;&gt;uint8_t&lt;/span&gt; inData,&lt;span class=&quot;keyword&quot;&gt;size_t&lt;/span&gt; inBitCount)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; nextBitHead = mBitHead + &lt;span class=&quot;keyword&quot;&gt;static_cast&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt;&amp;gt;(inBitCount);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(nextBitHead &amp;gt; mBitCapacity)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ReallocBuffer(&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::max(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*mBitCapacity,nextBitHead);)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//写到这我又有话想说了,为啥是乘以2来比呢.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//算了,写了又删了,写到另一篇文章里吧.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//计算偏移内存位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; byteoffset = mBitHead &amp;gt;&amp;gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; bitoffset = mBitHead &amp;amp; &lt;span class=&quot;number&quot;&gt;0x7&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//先得到有效bit等长的全1数据,然后与有效字节做与操作,再和新数据左移后的数据做或操作就合在一起啦.妙不妙.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;uint8_t&lt;/span&gt; currentMask = ~(&lt;span class=&quot;number&quot;&gt;0xff&lt;/span&gt; &amp;lt;&amp;lt; bitoffset);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  mBuffer[byteoffset] = (mBuffer[byteoffset] &amp;amp; currentMask)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          |(inData &amp;lt;&amp;lt; bitoffset);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//问题来了,合在一起以后有可能溢出这个字节.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; bitFreeThisByte = &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt; - bitoffset;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(bitFreeThisByte &amp;lt; inBitCount)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mBuffer[byteoffset+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = inData &amp;gt;&amp;gt; bitFreeThisByte;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//这里indata右移,因为已经在上面合并处理在上个字节了.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  mBitHead = nextBitHead;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最大缺点:麻烦!每次写个数据还要思考比特需求,而且也不是每个数据我们都知道大小的,所以通用用法当然是,比特需求等于size(type).&lt;/p&gt;
&lt;p&gt;注意两点:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;只有当需要的bit数比数据本身的比特数小的时候才手动指定&lt;/li&gt;
&lt;li&gt;bool类型.不用乘以8,需要特化一下.&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;template&amp;lt;typename T&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void write(T inData,size_t inBitCount = sizeof(T)*8)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  static_assert(std::is_arithmetic&amp;lt;T&amp;gt;::value||&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        std::is_enum&amp;lt;T&amp;gt;::value,&quot;only primitive data types&quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  WriteBits(inData,inBitCount);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://o6ymgz5vj.bkt.clouddn.com/chuizi.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;网上写的五花八门的快餐式教程和规则嵌套毫无灵魂.&lt;/p&gt;
&lt;p&gt; 为什么要对齐?什么时候使用&lt;code&gt;#pragma pack&lt;/code&gt;?有什么工具可以检查?有什么例外?等等..&lt;/p&gt;
&lt;p&gt;听听大师怎么说? &lt;del&gt;我就不复制粘贴了.&lt;/del&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://zh.wikipedia.org/wiki/埃里克·雷蒙&quot;&gt;Eric S. Raymond&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.catb.org/esr/structure-packing/&quot;&gt;The Lost Art of C Structure Packing&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ludx/The-Lost-Art-of-C-Structure-Packing&quot;&gt;翻译:失传的C结构体打包技艺&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;差不多已经讲解了这方面的我需要知道的知识的超集.&lt;/p&gt;
&lt;p&gt;那么问题来了.我为什么要知道这些呢?因为最近在做的一件事情让我想起了这些.&lt;/p&gt;
&lt;h1 id=&quot;比特流数据传输&quot;&gt;&lt;a href=&quot;#比特流数据传输&quot; class=&quot;headerlink&quot; title=&quot;比特流数据传输&quot;&gt;&lt;/a&gt;比特流数据传输&lt;/h1&gt;&lt;p&gt;在网络游戏中,数据传输是绕不开的话题.&lt;br&gt;这里说的不是进程通信IPC,也不是链路层,不是MTU,不是TCP,UDP,IP,不是分包路由,不是……=_=&lt;/p&gt;
    
    </summary>
    
    
      <category term="C++" scheme="http://cnhao.com/tags/C/"/>
    
      <category term="游戏开发" scheme="http://cnhao.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>所以为什么要用齐次坐标呢?</title>
    <link href="http://cnhao.com/2017/10/16/4d/"/>
    <id>http://cnhao.com/2017/10/16/4d/</id>
    <published>2017-10-16T13:52:52.000Z</published>
    <updated>2017-12-28T19:08:21.421Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://o6ymgz5vj.bkt.clouddn.com/sky.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;出于某种原因,我们在这里使用四维矩阵&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最早看到这个奇怪的论调是在openGL的教程里.第一次学的时候急着让我的箱子转起来,没考虑那么多.后来系统的复习图形学,开始探究这么问题.&lt;/p&gt;
&lt;p&gt;也就是说为啥不这样搞,如下图&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;img src=&quot;http://o6ymgz5vj.bkt.clouddn.com/axb.png&quot; alt=&quot;ax=b&quot;&gt;&lt;/p&gt;
&lt;p&gt;首先现代的图形sdk都是可编程管线的,你是怎么变化的是自己写进shader里面的.&lt;/p&gt;
&lt;p&gt;说法有很多,我大概回忆下各种说法.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;矩阵描述的是运动,这里的四维矩阵不是用来描述三维空间坐标和向量的,是描述运动的.&lt;/li&gt;
&lt;li&gt;是仿射空间不是三维空间&lt;/li&gt;
&lt;li&gt;如果变换矩阵使用三维的,就无法描述带有平移的运动.&lt;/li&gt;
&lt;li&gt;同上,如果要用三维矩阵描述平移,需要ax后面加个b,ax+b&lt;/li&gt;
&lt;li&gt;如果用三维矩阵表示三维空间的运动,那说到底都是在以原点为中心绕圈圈啊,我感觉这个说法对于我这样的菜鸟最好理解ax+by+cz=0与ax+by+cz+d=0的区别啊.一目了然.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;都对好吧,没毛病,老铁.&lt;/p&gt;
&lt;p&gt;完备知识体系之神&lt;strong&gt;Milo Yip&lt;/strong&gt;认为:&lt;del&gt;是的是的,这个称号是我封的&lt;/del&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;仿射空间确实可以通过ax+b来实现,但是对于透视投影会用到齐次坐标.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这些话我都是用自己的话又翻译的..这样方便一点.我是这么理解他的话的,所谓的透视投影对于变换矩阵的要求简单来讲就是需要平移和缩放,就像一个更大或者更小的相似三角形.&lt;/p&gt;
&lt;p&gt;归纳一下:&lt;br&gt;如果用四维矩阵,也就是三维空间的齐次坐标来表示变化.就可以让缩放,平移,旋转,透视等变换在一个矩阵里实现(&lt;strong&gt;矩阵乘法结合律&lt;/strong&gt;).&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;WVP = Projection * View * Translation * Rotation * Scale&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;openGL的方式,从右往左,向量在最右边.然后ax得到结果.在三维空间中,描述一个点的话w分量一般约定为1,描述一个向量的一般约定为0.毕竟1-1=0.没毛病吧.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://o6ymgz5vj.bkt.clouddn.com/sky.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;出于某种原因,我们在这里使用四维矩阵&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最早看到这个奇怪的论调是在openGL的教程里.第一次学的时候急着让我的箱子转起来,没考虑那么多.后来系统的复习图形学,开始探究这么问题.&lt;/p&gt;
&lt;p&gt;也就是说为啥不这样搞,如下图&lt;/p&gt;
    
    </summary>
    
    
      <category term="图形学" scheme="http://cnhao.com/tags/%E5%9B%BE%E5%BD%A2%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>Relax</title>
    <link href="http://cnhao.com/2017/09/20/bus/"/>
    <id>http://cnhao.com/2017/09/20/bus/</id>
    <published>2017-09-20T12:58:23.000Z</published>
    <updated>2017-12-28T18:30:44.660Z</updated>
    
    <content type="html">&lt;p&gt;&lt;img src=&quot;http://o6ymgz5vj.bkt.clouddn.com/bus.png&quot; alt=&quot;bus&quot;&gt;&lt;/p&gt;
&lt;p&gt;最近大脑处于异常疲惫状态 &lt;del&gt;整天从早被操到晚啊,我累的天呐撸😭&lt;/del&gt;&lt;br&gt;&lt;!--
但是不得不说,我特么终于又开始使用我发达的大脑了,还真是有点小兴奋呢.曾几何时,我这小兄弟既会打游戏,又会考试的.高中时候用AK杀人几局下来都不用重新换子弹的,天天睡觉又是早恋的闭着眼考985啊.想当年.. --&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;!-- 好了好了,吹比结束. --&gt;
&lt;p&gt;自从上了大学,和一群狐朋狗友打游戏占据了生活很大一块的时间.后来读了研,现在上班以后,每天业务时间时间又占据了我生活的主体.想一想,大脑好久没被挑战了.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;我给我所谓的业务性质的工作定义为:被产品需求所迫,非常繁琐,耗时,但难度不大不费脑的没有挑战和成长的工作.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;有点语无伦次了,不得不说最近有点亢奋,学习竟然有种快感,切实的感受到了那股淡淡的多巴胺释放.刚才拉屎的时候我想了想这个问题是为什么,想到了一些原因,准备下次写随笔的时候写.&lt;/p&gt;
&lt;p&gt;现在面临一个问题就是大脑有点过度使用,停不下来,白天抽空学,晚上图形学.睡前刷知乎,吃饭的时候还看斗鱼.拉屎的时候还在玩手机.睡觉都会做梦的.哦对了.说道做梦,我下下次随笔的时候要专门说一下这个问题.总之我的小兄弟有点累了..我说的是大脑,不是那个污污的小兄弟.&lt;/p&gt;
&lt;p&gt;那么问题来了.配图配个bus是搞毛的呢..&lt;br&gt;最近刚刚发现了一个非常棒棒的放松方式,就是坐班车上下班啊.简直就简直了..&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;优点&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;车上摇晃,无法看书,无法玩手机,无法看ipad,无法看kindle&lt;/li&gt;
&lt;li&gt;摇晃让人容易入睡&lt;/li&gt;
&lt;li&gt;人很少,一人两个做,躺着看风景.&lt;/li&gt;
&lt;li&gt;大脑得到了休息.很惬意的休息.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;缺点&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;特么的天通苑是第一站,我得早上6点起.&lt;/li&gt;
&lt;li&gt;有点堵.比我骑摩托慢.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;好了,不扯了,干点正事去.写点东西舒服多了,这才是屌屌的我嘛.👍一个.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;至于6点起,其实是因为我醒了啊.不是睡醒了,而是我清醒了.有梦了.你以为闹钟能在6点叫醒平均2点后睡觉的我?   Naive!&lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://o6ymgz5vj.bkt.clouddn.com/bus.png&quot; alt=&quot;bus&quot;&gt;&lt;/p&gt;
&lt;p&gt;最近大脑处于异常疲惫状态 &lt;del&gt;整天从早被操到晚啊,我累的天呐撸😭&lt;/del&gt;&lt;br&gt;&lt;!--
但是不得不说,我特么终于又开始使用我发达的大脑了,还真是有点小兴奋呢.曾几何时,我这小兄弟既会打游戏,又会考试的.高中时候用AK杀人几局下来都不用重新换子弹的,天天睡觉又是早恋的闭着眼考985啊.想当年.. --&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="http://cnhao.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>通俗易懂之移动语义与完美转发</title>
    <link href="http://cnhao.com/2017/07/20/moveforward/"/>
    <id>http://cnhao.com/2017/07/20/moveforward/</id>
    <published>2017-07-20T12:41:59.000Z</published>
    <updated>2017-12-28T18:40:46.259Z</updated>
    
    <content type="html">&lt;h1 id=&quot;移动语义&quot;&gt;&lt;a href=&quot;#移动语义&quot; class=&quot;headerlink&quot; title=&quot;移动语义&quot;&gt;&lt;/a&gt;移动语义&lt;/h1&gt;&lt;p&gt;&lt;del&gt;关于左右值得问题看我另一篇文章&lt;/del&gt;.&lt;/p&gt;
&lt;p&gt;移动语义是一种语义.被用来&lt;/p&gt;
&lt;p&gt;对右值充分利用提高效率&lt;/p&gt;
&lt;p&gt;譬如移动构造函数等.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2017/12/27/5a43960f03869.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;典型应用&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;template &amp;lt;class T&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void swap(T &amp;amp;a, T &amp;amp;b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    T tmp(std::move(a));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a = std::move(b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    b = std::move(tmp);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h1 id=&quot;move-amp-amp-forward&quot;&gt;&lt;a href=&quot;#move-amp-amp-forward&quot; class=&quot;headerlink&quot; title=&quot;move &amp;amp;&amp;amp; forward&quot;&gt;&lt;/a&gt;move &amp;amp;&amp;amp; forward&lt;/h1&gt;&lt;p&gt;move函数把左值转为右值引用,此值生命周期并未结束.&lt;/p&gt;
&lt;p&gt;基本等同于&lt;code&gt;static_cast&amp;lt;T&amp;amp;&amp;amp;&amp;gt;(lvalue);&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在C++11中，拷贝构造/赋值和移动构造/赋值函数必须同时提供，或者同时不提供。只有移动语义表明该类型的变量所拥有的资源只能被移动，而不能被拷贝。那么这样的资源必须是唯一的，因此只有移动语义的类型往往都是“资源型”的类型，如智能指针、文件流等.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;你想到了什么.我脑子里蹦出来的典型就是&lt;code&gt;unique_ptr&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;forward&lt;/code&gt;下面说&lt;/p&gt;
&lt;h1 id=&quot;完美转发&quot;&gt;&lt;a href=&quot;#完美转发&quot; class=&quot;headerlink&quot; title=&quot;完美转发&quot;&gt;&lt;/a&gt;完美转发&lt;/h1&gt;&lt;p&gt;如果我要实现一个函数可能有四种参数类型&lt;/p&gt;
&lt;p&gt;左值,const 左值&lt;/p&gt;
&lt;p&gt;右值,const右值&lt;/p&gt;
&lt;p&gt;怎么写,很简单写四个,静态多态.&lt;/p&gt;
&lt;p&gt;不过有了forward就不需要了.&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;executeCode&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &amp;amp; m)&lt;/span&gt; &lt;/span&gt;&amp;#123; &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;lvalue ref.&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;executeCode&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &amp;amp;&amp;amp; m)&lt;/span&gt; &lt;/span&gt;&amp;#123; &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;rvalue ref.&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;executeCode&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &amp;amp; m)&lt;/span&gt; &lt;/span&gt;&amp;#123; &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;const lvalue ref.&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;executeCode&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &amp;amp;&amp;amp; m)&lt;/span&gt; &lt;/span&gt;&amp;#123; &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;const rvalue ref.&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&quot;keyword&quot;&gt;typename&lt;/span&gt; T&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;perfectForward&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(T &amp;amp;&amp;amp; t)&lt;/span&gt; &lt;/span&gt;&amp;#123; executeCode(forward&amp;lt;T&amp;gt;(t)); &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; c = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; d = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    perfectForward(a);          &lt;span class=&quot;comment&quot;&gt;// lvalue ref&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    perfectForward(move(b));    &lt;span class=&quot;comment&quot;&gt;// rvalue ref&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    perfectForward(c);          &lt;span class=&quot;comment&quot;&gt;// const lvalue ref&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    perfectForward(move(d));    &lt;span class=&quot;comment&quot;&gt;// const rvalue ref&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    return &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;output:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;lvalue ref.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rvalue ref.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;const lvalue ref.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;const rvalue ref.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;清晰明了.&lt;br&gt;那么问题来了,如果&lt;br&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;perfectForward&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(T &amp;amp;&amp;amp; t)&lt;/span&gt; &lt;/span&gt;&amp;#123; executeCode(forward&amp;lt;T&amp;gt;(t)); &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//改为&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;perfectForward&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(T &amp;amp;&amp;amp; t)&lt;/span&gt; &lt;/span&gt;&amp;#123; executeCode(t); &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;答对有奖.债见.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;移动语义&quot;&gt;&lt;a href=&quot;#移动语义&quot; class=&quot;headerlink&quot; title=&quot;移动语义&quot;&gt;&lt;/a&gt;移动语义&lt;/h1&gt;&lt;p&gt;&lt;del&gt;关于左右值得问题看我另一篇文章&lt;/del&gt;.&lt;/p&gt;
&lt;p&gt;移动语义是一种语义.被用来&lt;/p&gt;
&lt;p&gt;对右值充分利用提高效率&lt;/p&gt;
&lt;p&gt;譬如移动构造函数等.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://i.loli.net/2017/12/27/5a43960f03869.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;典型应用&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;template &amp;lt;class T&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void swap(T &amp;amp;a, T &amp;amp;b)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    T tmp(std::move(a));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    a = std::move(b);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    b = std::move(tmp);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="C++" scheme="http://cnhao.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>我理解中的左值,右值和引用</title>
    <link href="http://cnhao.com/2017/07/11/value/"/>
    <id>http://cnhao.com/2017/07/11/value/</id>
    <published>2017-07-11T05:40:28.000Z</published>
    <updated>2017-12-28T18:59:52.294Z</updated>
    
    <content type="html">&lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt;c++11中所有的值分为三种,左值,右值,和将亡值(eXpiring Value)&lt;br&gt;将亡值的命名是很准确的,也是右值的一种,右值引用就是为了给他 &lt;strong&gt;&lt;em&gt;续命&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;具名的,可取址的称为左值&lt;/li&gt;
&lt;li&gt;表达式,字面常量 &lt;code&gt;&amp;quot;abc&amp;quot;,2,true&lt;/code&gt;为纯右值&lt;/li&gt;
&lt;li&gt;函数返回值,lambda表达式等为将亡值&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;左值引用是具名变量值的别名，而右值引用则是不具名（匿名）变量的别名。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;无论是左值引用还是右值引用,都必须在立即初始化.因为他们并不拥有绑定对象的内存空间只是一个别名.&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;右值引用&quot;&gt;&lt;a href=&quot;#右值引用&quot; class=&quot;headerlink&quot; title=&quot;右值引用&quot;&gt;&lt;/a&gt;右值引用&lt;/h1&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;T &amp;amp;&amp;amp; a = ReturnRvalue();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;T b = ReturnRvalue();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;函数&lt;code&gt;ReturnRvalue()&lt;/code&gt;返回一个临时变量(**将亡值&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;下面的b是常用的做法,把临时变量赋值给b,&lt;code&gt;ReturnRvalue()&lt;/code&gt;的生命周期在本行被执行后终结.&lt;/p&gt;
&lt;p&gt;上面的a是右值引用,他绑定了临时变量,因为临时变量并不会再语句结束后死去,只要a活着,他就不会死.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;值得注意的是,如果函数的返回值是一个类的对象,那么当另一个函数直接调用此函数返回值时,如果是值引用会调用拷贝构造和析构函数.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;万能引用-常量左值引用&quot;&gt;&lt;a href=&quot;#万能引用-常量左值引用&quot; class=&quot;headerlink&quot; title=&quot;万能引用(常量左值引用)&quot;&gt;&lt;/a&gt;万能引用(常量左值引用)&lt;/h1&gt;&lt;p&gt;常量左值引用被称为万能引用,&lt;strong&gt;我猜是因为&lt;/strong&gt;因为他打破了左值引用不可以绑定右值的传说.&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;T &amp;amp; e = ReturnRvalue(); &lt;span class=&quot;comment&quot;&gt;//传说,编译错误&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; T &amp;amp; f = ReturnRvalue(); &lt;span class=&quot;comment&quot;&gt;//打破了,一切正常&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &amp;amp; judgement = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//同上&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; judgement = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//注意和第三行的区别哦&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;常量左值引用是只读的!!!!&lt;/p&gt;
&lt;p&gt;目的是为了减少各种开销,内存,复制,拷贝构造,析构等.&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;TIPS&quot;&gt;&lt;a href=&quot;#TIPS&quot; class=&quot;headerlink&quot; title=&quot;TIPS&quot;&gt;&lt;/a&gt;TIPS&lt;/h1&gt;&lt;p&gt;左值引用不可以绑定右值,下面是错误的&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; c;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &amp;amp;&amp;amp; d = c;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;非常量左值只能接受非常量左值对其进行初始化。&lt;/p&gt;
&lt;p&gt;标准库在 &lt;code&gt;&amp;lt;type_traits&amp;gt;&lt;/code&gt; &lt;code&gt;头文件中提供了3个模板类：is_rvalue_reference&lt;/code&gt;,&lt;code&gt;is_lvalue_reference&lt;/code&gt;,&lt;code&gt;is_reference&lt;/code&gt;,可供我们进行判断。比如:&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; is_rvalue_reference&amp;lt;&lt;span class=&quot;built_in&quot;&gt;string&lt;/span&gt; &amp;amp;&amp;amp;&amp;gt;::value;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt;c++11中所有的值分为三种,左值,右值,和将亡值(eXpiring Value)&lt;br&gt;将亡值的命名是很准确的,也是右值的一种,右值引用就是为了给他 &lt;strong&gt;&lt;em&gt;续命&lt;/em&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;具名的,可取址的称为左值&lt;/li&gt;
&lt;li&gt;表达式,字面常量 &lt;code&gt;&amp;quot;abc&amp;quot;,2,true&lt;/code&gt;为纯右值&lt;/li&gt;
&lt;li&gt;函数返回值,lambda表达式等为将亡值&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;左值引用是具名变量值的别名，而右值引用则是不具名（匿名）变量的别名。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;无论是左值引用还是右值引用,都必须在立即初始化.因为他们并不拥有绑定对象的内存空间只是一个别名.&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;右值引用&quot;&gt;&lt;a href=&quot;#右值引用&quot; class=&quot;headerlink&quot; title=&quot;右值引用&quot;&gt;&lt;/a&gt;右值引用&lt;/h1&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;T &amp;amp;&amp;amp; a = ReturnRvalue();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;T b = ReturnRvalue();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;函数&lt;code&gt;ReturnRvalue()&lt;/code&gt;返回一个临时变量(**将亡值&lt;/p&gt;
    
    </summary>
    
    
      <category term="C++" scheme="http://cnhao.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>位图索引</title>
    <link href="http://cnhao.com/2016/09/05/bitmap/"/>
    <id>http://cnhao.com/2016/09/05/bitmap/</id>
    <published>2016-09-05T06:03:16.000Z</published>
    <updated>2017-12-28T18:59:05.728Z</updated>
    
    <content type="html">&lt;p&gt;说一下之前投放系统概述里说到过的位图索引–Bitmap索引.&lt;/p&gt;
&lt;p&gt;这一块应该也是业务逻辑为主要内容的工作中最有&lt;strong&gt;&lt;em&gt;Trick&lt;/em&gt;&lt;/strong&gt;的部分了.&lt;/p&gt;
&lt;p&gt;当一个基本定向的广告(&lt;strong&gt;上下线&lt;/strong&gt;,&lt;strong&gt;修改&lt;/strong&gt;等)由bp告知ws后,ws会转发给位图索引.&lt;/p&gt;
&lt;p&gt;位图索引维护N个位图.N为维度个数.(譬如年龄,兴趣,位置,性别等等)&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Age位图:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;adid_1&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;adid_2&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;…&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;adid_20&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;…&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;20&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;21&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;22&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;20&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;21&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;…&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;..&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;..&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;..&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;..&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;..&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;43&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;..&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;..&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;..&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;..&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;..&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;..&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;兴趣位图,位置位图等都是类似的结构.&lt;/p&gt;
&lt;p&gt;左边第一列就是这个维度的所有枚举值,这一行剩下的每一个位置都代表了某广告计划是否选择了这个维度的这个枚举值进行投放.&lt;/p&gt;
&lt;p&gt;譬如一个广告计划是对北京,20-25岁,女性进行投放,那么就分别对这三个特征维度的位图更新&lt;/p&gt;
&lt;p&gt;当一个广告请求从端上传到MS以后,因为请求中带着用户uid,&lt;strong&gt;MS会先从redis中取到这个uid的特征&lt;/strong&gt;,如果用户年龄是22岁,那么在age位图中第一列为22的行中所有值为1的广告计划 &lt;strong&gt;(可以用1去做与操作,或者用0做异或,对位图的可以用左移,右移,加减1,与或非和模运算来实现)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;然后在location位图中取位置为北京的那一行,同样的在女性中取所有adid,在别的维度取的值为空,然后对取出的三列adid求交集,done!&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;之后还会有一些别的业务逻辑的规则应用,譬如**有一种广告产品(也是最贵的广告产品),就是定投,广告主通过自己或者第三方挖包,制定一个uid包上传给广告引擎,我们会在redis里维护一个&lt;code&gt;uid---&amp;gt;adid&lt;/code&gt;倒排索引.继续和上面的结果求交集.&lt;/p&gt;
&lt;p&gt;最后把所有的广告候选集做排序,返回头部(投放概述图中有提到).&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;感谢强大的C++,感谢内存操作,感谢MTV,CCTV&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;基本定向从位图索引中拉取,求交只需 1ms!!&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;说一下之前投放系统概述里说到过的位图索引–Bitmap索引.&lt;/p&gt;
&lt;p&gt;这一块应该也是业务逻辑为主要内容的工作中最有&lt;strong&gt;&lt;em&gt;Trick&lt;/em&gt;&lt;/strong&gt;的部分了.&lt;/p&gt;
&lt;p&gt;当一个基本定向的广告(&lt;strong&gt;上下线&lt;/strong&gt;,&lt;strong&gt;修改&lt;/strong&gt;等)由bp告知ws后,ws会转发给位图索引.&lt;/p&gt;
&lt;p&gt;位图索引维护N个位图.N为维度个数.(譬如年龄,兴趣,位置,性别等等)&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Age位图:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;adid_1&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;adid_2&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;…&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;adid_20&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;…&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;20&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;21&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;22&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;20&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;21&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;…&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;..&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;..&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;..&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;..&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;..&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;43&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;..&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;..&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;..&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;..&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;..&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;..&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
    
      <category term="广告引擎" scheme="http://cnhao.com/tags/%E5%B9%BF%E5%91%8A%E5%BC%95%E6%93%8E/"/>
    
  </entry>
  
  <entry>
    <title>广告投放系统概览</title>
    <link href="http://cnhao.com/2016/09/02/ad/"/>
    <id>http://cnhao.com/2016/09/02/ad/</id>
    <published>2016-09-02T02:30:32.000Z</published>
    <updated>2017-12-28T19:00:41.009Z</updated>
    
    <content type="html">&lt;p&gt;**广告系统分两大块主要的内容&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;投放&lt;/li&gt;
&lt;li&gt;结算&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;这里说的广告主要指的是feed流里面的广告.&lt;/p&gt;
&lt;p&gt;这个文章里的图代表是**收入最大的一块,粉丝通投放流程.&lt;/p&gt;
&lt;p&gt;粉丝通广告中还有一些特殊广告会有细微差别.&lt;/p&gt;
&lt;p&gt;譬如应用家,品牌速递,账号推广,原生广告等.&lt;/p&gt;
&lt;p&gt;以后想到什么了就说点.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://o6ymgz5vj.bkt.clouddn.com/toufang.png&quot; alt=&quot;干货&quot;&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;我画这图好像都是纯干货,我就不废话了,以后再啰嗦&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MS—&amp;gt;Match Server&lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;**广告系统分两大块主要的内容&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;投放&lt;/li&gt;
&lt;li&gt;结算&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;这里说的广告主要指的是feed流里面的广告.&lt;/p&gt;
&lt;p&gt;这个文章里的图代表是**收入最大的一块,粉丝通投放流程.&lt;/p&gt;
&lt;p&gt;粉丝通广告中还有一些特殊广告会有细微差别.&lt;/p&gt;
&lt;p&gt;譬如应用家,品牌速递,账号推广,原生广告等.&lt;/p&gt;
&lt;p&gt;以后想到什么了就说点.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://o6ymgz5vj.bkt.clouddn.com/toufang.png&quot; alt=&quot;干货&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="广告引擎" scheme="http://cnhao.com/tags/%E5%B9%BF%E5%91%8A%E5%BC%95%E6%93%8E/"/>
    
  </entry>
  
  <entry>
    <title>计算机中字,字长,字节与位</title>
    <link href="http://cnhao.com/2016/08/29/byte/"/>
    <id>http://cnhao.com/2016/08/29/byte/</id>
    <published>2016-08-29T06:12:42.000Z</published>
    <updated>2017-12-28T18:58:01.511Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;抛开机器谈字长,都是耍流氓&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;&lt;h2 id=&quot;比特-位-bit&quot;&gt;&lt;a href=&quot;#比特-位-bit&quot; class=&quot;headerlink&quot; title=&quot;比特==位==bit&quot;&gt;&lt;/a&gt;比特==位==bit&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;计算机存储的最小单位&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;bit就是一个二进制位.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h2 id=&quot;字节-拜特-Byte&quot;&gt;&lt;a href=&quot;#字节-拜特-Byte&quot; class=&quot;headerlink&quot; title=&quot;字节==拜特==Byte&quot;&gt;&lt;/a&gt;字节==拜特==Byte&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;计算机中以字节为单位存储和解释信息&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;  1Byte == 8bit &lt;del&gt;我在8bit后面加不加s的问题上犹豫了五分钟🙄&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;  一个字节可以存储一个ASCII码的内容&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;h2 id=&quot;字-word&quot;&gt;&lt;a href=&quot;#字-word&quot; class=&quot;headerlink&quot; title=&quot;字==word&quot;&gt;&lt;/a&gt;字==word&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;计算机进行数据处理时,一次存取、加工和传送的数据长度称为字(word)。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一个64位处理器顾名思义一次可以处理64个位,8个字节的数据,所以一个字长就是8&lt;/p&gt;
&lt;p&gt;32位一个word就是4&lt;/p&gt;
&lt;p&gt;c++里一个指针就占用一个机器字长的长度.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h2 id=&quot;字长&quot;&gt;&lt;a href=&quot;#字长&quot; class=&quot;headerlink&quot; title=&quot;字长&quot;&gt;&lt;/a&gt;字长&lt;/h2&gt;&lt;p&gt;字长就是计算机字的长度,64位的计算机的字长就是64.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;抛开机器谈字长,都是耍流氓&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;&lt;h2 id=&quot;比特-位-bit&quot;&gt;&lt;a href=&quot;#比特-位-bit&quot; class=&quot;headerlink&quot; title=&quot;比特==位==bit&quot;&gt;&lt;/a&gt;比特==位==bit&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;计算机存储的最小单位&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;bit就是一个二进制位.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;h2 id=&quot;字节-拜特-Byte&quot;&gt;&lt;a href=&quot;#字节-拜特-Byte&quot; class=&quot;headerlink&quot; title=&quot;字节==拜特==Byte&quot;&gt;&lt;/a&gt;字节==拜特==Byte&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;计算机中以字节为单位存储和解释信息&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="算法" scheme="http://cnhao.com/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>Mac下brew安装制定版本</title>
    <link href="http://cnhao.com/2016/08/21/homebrew/"/>
    <id>http://cnhao.com/2016/08/21/homebrew/</id>
    <published>2016-08-21T09:35:03.000Z</published>
    <updated>2017-12-28T18:56:57.594Z</updated>
    
    <content type="html">&lt;h3 id=&quot;1-安装&quot;&gt;&lt;a href=&quot;#1-安装&quot; class=&quot;headerlink&quot; title=&quot;1. 安装&quot;&gt;&lt;/a&gt;1. 安装&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ruby &lt;span class=&quot;_&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;brew update&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;2-版本&quot;&gt;&lt;a href=&quot;#2-版本&quot; class=&quot;headerlink&quot; title=&quot;2. 版本&quot;&gt;&lt;/a&gt;2. 版本&lt;/h3&gt;&lt;p&gt;之前旧版 &lt;code&gt;homebrew&lt;/code&gt; 里面,有一个 &lt;code&gt;brew versions ***&lt;/code&gt; 的命令,现在移除了.&lt;br&gt;需要安装&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;brew tap homebrew/versions&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过以下命令来选择版本:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;brew install homebrew/versions/lua&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;hr&gt;
&lt;p&gt;或者使用以下命令来选择:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;home search ***&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;3-安装&quot;&gt;&lt;a href=&quot;#3-安装&quot; class=&quot;headerlink&quot; title=&quot;3. 安装&quot;&gt;&lt;/a&gt;3. 安装&lt;/h3&gt;&lt;p&gt;选定安装,done&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;brew install homebrew/versions/lua53&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-安装&quot;&gt;&lt;a href=&quot;#1-安装&quot; class=&quot;headerlink&quot; title=&quot;1. 安装&quot;&gt;&lt;/a&gt;1. 安装&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ruby &lt;span class=&quot;_&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;variable&quot;&gt;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;brew update&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Macosx" scheme="http://cnhao.com/tags/Macosx/"/>
    
  </entry>
  
  <entry>
    <title>MD</title>
    <link href="http://cnhao.com/2016/08/10/MD/"/>
    <id>http://cnhao.com/2016/08/10/MD/</id>
    <published>2016-08-10T15:28:31.000Z</published>
    <updated>2016-08-11T07:30:34.000Z</updated>
    
    <content type="html">&lt;p&gt;念个经&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://o6ymgz5vj.bkt.clouddn.com/night_city.png&quot; alt=&quot;yeyeyeye&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;念个经&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://o6ymgz5vj.bkt.clouddn.com/night_city.png&quot; alt=&quot;yeyeyeye&quot;&gt;&lt;/p&gt;

    
    </summary>
    
    
      <category term="随笔" scheme="http://cnhao.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
</feed>
